
----------------------------------------------- *** ------------------------------------------------
---                       Checking the continuity of the protein backbone                        ---
----------------------------------------------- *** ------------------------------------------------

No breaks in the backbone - hooray! (nothing needs to be done here)

----------------------------------------------- *** ------------------------------------------------
---                       Generating restraints for duplicated conformers                        ---
----------------------------------------------- *** ------------------------------------------------

Found 33 duplicated conformers consisting of 219 atoms


----------------------------------------------- *** ------------------------------------------------
---                            refmac duplicate conformer restraints                             ---
----------------------------------------------- *** ------------------------------------------------

exte dist first chain B resi   51 alte A atom  N   second chain B resi   51 alte B atom  N   value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  CA  second chain B resi   51 alte B atom  CA  value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  C   second chain B resi   51 alte B atom  C   value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  O   second chain B resi   51 alte B atom  O   value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  CB  second chain B resi   51 alte B atom  CB  value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  CG  second chain B resi   51 alte B atom  CG  value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  CD  second chain B resi   51 alte B atom  CD  value 0.0 sigma 0.02 type 1
exte dist first chain B resi   51 alte A atom  NE  second chain B resi   51 alte B atom  NE  value 0.0 sigma 0.02 type 1
exte dist first chain B resi   5...


----------------------------------------------- *** ------------------------------------------------
---                            phenix duplicate conformer restraints                             ---
----------------------------------------------- *** ------------------------------------------------

refinement.geometry_restraints.edits {
    bond {
        action = *add
        atom_selection_1 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'A' and name  N  
        atom_selection_2 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'B' and name  N  
        distance_ideal = 0.0
        sigma = 0.02
        slack = None
    }
    bond {
        action = *add
        atom_selection_1 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'A' and name  CA 
        atom_selection_2 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'B' and name  CA 
        distance_ideal = 0.0
        sigma = 0.02
        slack = None
    }
    bond {
        action = *add
        atom_selection_1 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'A' and name  C  
        atom_selection_2 = chain 'B' and resseq   51 and icode ' ' and resname 'ARG' and altid 'B' and name  C  
        distance_ideal = 0.0
 ...


----------------------------------------------- *** ------------------------------------------------
---                           Generating occupancy-constrained groups                            ---
----------------------------------------------- *** ------------------------------------------------

Looking for ligands with resname DRG or FRG or LIG or UNK or UNL

------------------------------------->>>

Created 2 occupancy groups for overlapping conformers


----------------------------------------------- *** ------------------------------------------------
---                                 refmac occupancy restraints                                  ---
----------------------------------------------- *** ------------------------------------------------

occupancy group id 1 chain C resi   51 alte A
occupancy group id 1 chain C resi   95 alte A
occupancy group id 1 chain C resi   96 alte A
occupancy group id 1 chain C resi   97 alte A
occupancy group id 1 chain C resi   98 alte A
occupancy group id 1 chain C resi   99 alte A
occupancy group id 1 chain C resi  443 alte A
occupancy group id 1 chain C resi  453 alte A
occupancy group id 1 chain C resi  458 alte A
occupancy group id 2 chain C resi   51 alte B
occupancy group id 2 chain C resi   95 alte B
occupancy group id 2 chain C resi   96 alte B
occupancy group id 2 chain C resi   97 alte B
occupancy group id 2 chain C resi   98 alte B
occupancy group id 2 chain C resi   99 alte B
occupancy group id 2 chain C resi  443 alte B
occupancy group id 2 chain C resi  453 alte B
occupancy group id 2 chain C resi  458 alte B
occupancy group id 3 chain C resi   51 alte C
occupancy group id 3 chain C resi   95 alte C
occupancy group id 3 chain C resi   96 alte C
occupancy group id 3 chain C resi ...


----------------------------------------------- *** ------------------------------------------------
---                                 phenix occupancy restraints                                  ---
----------------------------------------------- *** ------------------------------------------------

refinement.refine.occupancies {
    constrained_group {
        selection = (chain 'C' and resseq   51 and icode ' ' and resname 'ARG' and altid 'A') or \
                    (chain 'C' and resseq   95 and icode ' ' and resname 'PRO' and altid 'A') or \
                    (chain 'C' and resseq   96 and icode ' ' and resname 'ALA' and altid 'A') or \
                    (chain 'C' and resseq   97 and icode ' ' and resname 'GLY' and altid 'A') or \
                    (chain 'C' and resseq   98 and icode ' ' and resname 'LEU' and altid 'A') or \
                    (chain 'C' and resseq   99 and icode ' ' and resname 'ILE' and altid 'A') or \
                    (chain 'C' and resseq  443 and icode ' ' and resname 'HOH' and altid 'A') or \
                    (chain 'C' and resseq  453 and icode ' ' and resname 'HOH' and altid 'A') or \
                    (chain 'C' and resseq  458 and icode ' ' and resname 'HOH' and altid 'A')
        selection = (chain 'C' and resseq   51 and icode '...

